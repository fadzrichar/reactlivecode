{"ast":null,"code":"import createStore from \"unistore\";\nimport axios from \"axios\"; // Initiate new store state\n\nconst initState = {\n  listTopNews: [],\n  listEverything: [],\n  isLoading: true,\n  paramsCategory: '',\n  apiKey: \"293e5a8d202a42f788880487d3bc4c2e\",\n  baseUrl: \"https://newsapi.org/v2/\"\n};\nexport const store = createStore(initState);\nexport const actions = store => ({\n  // Define everything function for listnews everything in Home pages\n  everything: (state, event) => {\n    const urlEverything = state.baseUrl + \"everything?domains=wsj.com,nytimes.com&apiKey=\" + state.apiKey;\n    const self = store;\n    axios.get(urlEverything).then(function (response) {\n      self.setState({\n        listEverything: response.data.articles,\n        isLoading: false\n      }); // handle success\n\n      console.log(response.data);\n    }).catch(function (error) {\n      self.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  setCategory: (state, category) => {\n    // const self = store\n    return {\n      paramsCategory: category\n    };\n  },\n  // Define everything function for listnews everything in newsCategory pages\n  everythingCategory: async (state, event) => {\n    const urlEverything = state.baseUrl + \"everything?domains=wsj.com,nytimes.com&apiKey=\" + state.apiKey; // const paramCategory = await this.match.params.category;\n    // const self = store;\n    // await axios\n    // .get(urlEverything + \"&q=\" + paramCategory)\n    // .then(function(response) {\n    //   self.setState({ listEverything: response.data.articles, isLoading: false });\n    //   // handle success\n    //   console.log(response.data);\n    // })\n    // .catch(function(error) {\n    //   self.setState({ isLoading: false });\n    //   // handle error\n    //   console.log(error);\n    // });\n  },\n  // Define topArticle function for listnews top headlines in Home pages\n  topArticle: (state, event) => {\n    const urlHeadline = state.baseUrl + \"top-headlines?country=us&pageSize=5&apiKey=\" + state.apiKey;\n    const self = store;\n    axios.get(urlHeadline).then(function (response) {\n      self.setState({\n        listTopNews: response.data.articles,\n        isLoading: false\n      }); // handle success\n\n      console.log(response.data);\n    }).catch(function (error) {\n      self.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  // Define topArticle function for listnews top headlines in newsCategory pages\n  topArticleCategory: async (state, event) => {\n    const urlHeadline = state.baseUrl + \"top-headlines?country=us&pageSize=5&apiKey=\" + state.apiKey;\n    const paramCategory = this.match.params.category;\n    const self = store;\n    await axios.get(urlHeadline + \"&category=\" + paramCategory).then(function (response) {\n      self.setState({\n        listTopNews: response.data.articles,\n        isLoading: false\n      }); // handle success\n\n      console.log(response.data);\n    }).catch(function (error) {\n      self.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta6/Alta/Challenge_react/src/store.js"],"names":["createStore","axios","initState","listTopNews","listEverything","isLoading","paramsCategory","apiKey","baseUrl","store","actions","everything","state","event","urlEverything","self","get","then","response","setState","data","articles","console","log","catch","error","setCategory","category","everythingCategory","topArticle","urlHeadline","topArticleCategory","paramCategory","match","params"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\n// Initiate new store state\nconst initState = {\n    listTopNews: [],\n    listEverything : [],\n\tisLoading: true,\n\tparamsCategory: '',\n    apiKey: \"293e5a8d202a42f788880487d3bc4c2e\",\n    baseUrl: \"https://newsapi.org/v2/\"\n}\n\nexport const store = createStore(initState);\n\nexport const actions = store => ({\n    // Define everything function for listnews everything in Home pages\n    everything : (state,event) => {\n\t\tconst urlEverything = state.baseUrl + \"everything?domains=wsj.com,nytimes.com&apiKey=\" + state.apiKey;\n\t\tconst self = store;\n\t\taxios\n\t\t.get(urlEverything)\n\t\t.then(function(response) {\n\t\t  self.setState({ listEverything: response.data.articles, isLoading: false });\n\t\t  // handle success\n\t\t  console.log(response.data);\n\t\t})\n\t\t.catch(function(error) {\n\t\t  self.setState({ isLoading: false });\n\t\t  // handle error\n\t\t  console.log(error);\n\t\t});\n\t},\n\n\tsetCategory: (state, category) => {\n\t\t// const self = store\n\t\treturn {paramsCategory : category}\n\t},\n\n\t// Define everything function for listnews everything in newsCategory pages\n\teverythingCategory : async (state,event) => {\n\t\tconst urlEverything = state.baseUrl + \"everything?domains=wsj.com,nytimes.com&apiKey=\" + state.apiKey;\n\t\t// const paramCategory = await this.match.params.category;\n\t\t// const self = store;\n\t\t// await axios\n\t\t// .get(urlEverything + \"&q=\" + paramCategory)\n\t\t// .then(function(response) {\n\t\t//   self.setState({ listEverything: response.data.articles, isLoading: false });\n\t\t//   // handle success\n\t\t//   console.log(response.data);\n\t\t// })\n\t\t// .catch(function(error) {\n\t\t//   self.setState({ isLoading: false });\n\t\t//   // handle error\n\t\t//   console.log(error);\n\t\t// });\n\t},\n\n    // Define topArticle function for listnews top headlines in Home pages\n    topArticle : (state,event) => {\n\t\tconst urlHeadline = state.baseUrl + \"top-headlines?country=us&pageSize=5&apiKey=\" + state.apiKey;\n\t\tconst self = store;\n\t\taxios\n\t\t.get(urlHeadline)\n\t\t.then(function(response) {\n\t\t  self.setState({ listTopNews: response.data.articles, isLoading: false });\n\t\t  // handle success\n\t\t  console.log(response.data);\n\t\t})\n\t\t.catch(function(error) {\n\t\t  self.setState({ isLoading: false });\n\t\t  // handle error\n\t\t  console.log(error);\n\t\t});\n    },\n\t\n\t// Define topArticle function for listnews top headlines in newsCategory pages\n\ttopArticleCategory : async (state,event) => {\n\t\tconst urlHeadline = state.baseUrl + \"top-headlines?country=us&pageSize=5&apiKey=\" + state.apiKey;\n\t\tconst paramCategory = this.match.params.category;\n\t\tconst self = store;\n\t\tawait axios\n\t\t.get(urlHeadline + \"&category=\" + paramCategory)\n\t\t.then(function(response) {\n\t\t  self.setState({ listTopNews: response.data.articles, isLoading: false });\n\t\t  // handle success\n\t\t  console.log(response.data);\n\t\t})\n\t\t.catch(function(error) {\n\t\t  self.setState({ isLoading: false });\n\t\t  // handle error\n\t\t  console.log(error);\n\t\t});\n\t},\n})"]},"metadata":{},"sourceType":"module"}