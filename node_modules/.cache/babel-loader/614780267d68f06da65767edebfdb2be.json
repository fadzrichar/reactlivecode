{"ast":null,"code":"import createStore from \"unistore\";\nimport axios from \"axios\"; // Initiate new store state and export it\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  avatar: \"\",\n  password: \"\",\n  login_status: true,\n  listMovies: [],\n  paramsCategory: '',\n  isLoading: true,\n  listMoviesCategory: [],\n  hostLogin: \"https://api-todofancy.herokuapp.com/api/auth\",\n  baseUrl: \"https://api-todofancy.herokuapp.com/api/movies\"\n};\nexport const store = createStore(initialState); // initiate actions function and export it\n\nexport const actions = store => ({\n  // Set dynamic category\n  setCategory: (state, category) => {\n    return {\n      paramsCategory: category\n    };\n  },\n  // Define movies function for listing movies in moviesCategory pages\n  moviesCategory: async (state, event) => {\n    const self = store;\n    await axios.get(state.baseUrl).then(function (response) {\n      self.setState({\n        listMoviesCategory: response.data.articles,\n        isLoading: false\n      }); // handle success\n\n      console.log(response.data);\n    }).catch(function (error) {\n      self.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta6/Alta/React/live_code_react/src/store.js"],"names":["createStore","axios","initialState","name","email","avatar","password","login_status","listMovies","paramsCategory","isLoading","listMoviesCategory","hostLogin","baseUrl","store","actions","setCategory","state","category","moviesCategory","event","self","get","then","response","setState","data","articles","console","log","catch","error"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,YAAY,EAAE,IALK;AAMnBC,EAAAA,UAAU,EAAE,EANO;AAOnBC,EAAAA,cAAc,EAAE,EAPG;AAQnBC,EAAAA,SAAS,EAAE,IARQ;AASnBC,EAAAA,kBAAkB,EAAE,EATD;AAUnBC,EAAAA,SAAS,EAAE,8CAVQ;AAWnBC,EAAAA,OAAO,EAAE;AAXU,CAArB;AAcA,OAAO,MAAMC,KAAK,GAAGd,WAAW,CAACE,YAAD,CAAzB,C,CAEP;;AACA,OAAO,MAAMa,OAAO,GAAGD,KAAK,KAAK;AAEhC;AACAE,EAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC,WAAO;AAACT,MAAAA,cAAc,EAAGS;AAAlB,KAAP;AACA,GAL+B;AAOhC;AACAC,EAAAA,cAAc,EAAG,OAAOF,KAAP,EAAaG,KAAb,KAAuB;AACvC,UAAMC,IAAI,GAAGP,KAAb;AACA,UAAMb,KAAK,CACVqB,GADK,CACDL,KAAK,CAACJ,OADL,EAELU,IAFK,CAEA,UAASC,QAAT,EAAmB;AACvBH,MAAAA,IAAI,CAACI,QAAL,CAAc;AAAEd,QAAAA,kBAAkB,EAAEa,QAAQ,CAACE,IAAT,CAAcC,QAApC;AAA8CjB,QAAAA,SAAS,EAAE;AAAzD,OAAd,EADuB,CAEvB;;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAArB;AACD,KANK,EAOLI,KAPK,CAOC,UAASC,KAAT,EAAgB;AACrBV,MAAAA,IAAI,CAACI,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAE;AAAb,OAAd,EADqB,CAErB;;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAXK,CAAN;AAYA;AAtB+B,CAAL,CAArB","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\n// Initiate new store state and export it\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  avatar: \"\",\n  password: \"\",\n  login_status: true,\n  listMovies: [],\n  paramsCategory: '',\n  isLoading: true,\n  listMoviesCategory: [],\n  hostLogin: \"https://api-todofancy.herokuapp.com/api/auth\",\n  baseUrl: \"https://api-todofancy.herokuapp.com/api/movies\"\n};\n\nexport const store = createStore(initialState);\n\n// initiate actions function and export it\nexport const actions = store => ({\n\n\t// Set dynamic category\n\tsetCategory: (state, category) => {\n\t\treturn {paramsCategory : category}\n\t},\n\n\t// Define movies function for listing movies in moviesCategory pages\n\tmoviesCategory : async (state,event) => {\n\t\tconst self = store;\n\t\tawait axios\n\t\t.get(state.baseUrl)\n\t\t.then(function(response) {\n\t\t  self.setState({ listMoviesCategory: response.data.articles, isLoading: false });\n\t\t  // handle success\n\t\t  console.log(response.data);\n\t\t})\n\t\t.catch(function(error) {\n\t\t  self.setState({ isLoading: false });\n\t\t  // handle error\n\t\t  console.log(error);\n\t\t});\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}